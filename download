<form>
<div class="col-xs-4">
<table>

<tbody>

<tr>
  <td>
         <p id="show">Name : Shubham joshi <span class="glyphicon glyphicon-pencil"  onclick="name()"></span></p>
  </td>
</tr>

<div class="form-group" id="name" style="display: none;">
<label>Name :</label><br>
<input type="text" name="Name"  class="form-control" placeholder="Enter your name."><br>
<button class="btn btn-primary">Save</button>
</div><hr>

<tr>
  <td>
       <p id="user">Username : shub@ <span class="glyphicon glyphicon-pencil" onclick="user()"></span></p>
  </td>
</tr>

<div class="form-group" id="username" style="display: none;">
<label>Username : </label><br>
<input type="text" name="Username" class="form-control" placeholder="Enter your username." /><br>
<button class="btn btn-primary">Save</button>
</div><hr>

<tr>
  <td>
       <p id="emails">Email : shubhamjoshi844@gmail.com <span class="glyphicon glyphicon-pencil" onclick="email()"></span></p>
  </td>
</tr>

<div class="form-group" id="email" style="display: none;">
<label>Email :</label><br>
<input type="email" name="Email" class="form-control" placeholder="Enter your email." /><br>
<button class="btn btn-primary">Save</button>
</div>

<tr>
    <td>
       <p id="pass">Password <span class="glyphicon glyphicon-pencil" onclick="pass()"></span></p>
    </td>
</tr>
<div class="form-group" id="password" style="display: none;">
<label>Enter Password :</label><br>
<input type="password" name="Password" class="form-control" placeholder="Enter your password." ><br>


<label>Re-Enter-Password :</label><br>
<input type="password" name="Confirm" class="form-control"  placeholder="Re-Enter-Password" ><br>
<button class="btn btn-primary">Save</button>
</div>

</div>
</tbody>
</table>
</form>
</div> 

passport.use('signup', new LocalStrategy({

    usernameField: "Email",
    passwordField: "Password",
    // emailField   : "Email",
    // confirmField : "Confirm",
    // namwField    : "Name",
    passReqToCallback: true

}, function(req, Email, Password, /*Username, Confirm,*/ Name, done) {
     
      // var Name     = req.body.Name;
      // var Username = req.body.Username;
      // var Confirm  = req.body.Confirm;
    
    //console.log(Name     === arguments[4]); // true
    //console.log(Username === arguments[4]); // true
    console.log(req      === arguments[0]); // true
    console.log(Email    === arguments[1]); // true
    console.log(Password === arguments[2]); // true
    //console.log(Confirm  === arguments[4]); // true
    console.log(done     === arguments[3]); // true
    

    process.nextTick(function() {

        crud.findOne({ Email: Email }, function(err, user) {

            if (err) {
                return done(err);
            }

            if (user) {
                return done(null, false, console.log("Email is already used"));
            }

            var data = new crud();

            //data.Confirm  = Confirm;
            data.Password = Password;
            data.Email    = Email;
            //data.Username = Username;
            //data.Name     = Name;

            data.save(function(err) {
                if (err) throw err;
                return done(null, data, console.log(data));
            })
        })
    })
}));

//Login authentication
passport.use('login', new LocalStrategy ({

      usernameField : "Email",
      passwordField : "Password"

}, function (Email, Password, done, req) {
    

    console.log(req      === arguments[0]); // true
    console.log(Email    === arguments[1]); // true
    console.log(Password === arguments[2]); // true
    console.log(done     === arguments[3]); // true
    

        crud.findOne({ Email:Email }, function (err, user) {

              if (err) 

                return done(err);

              if (!user) {

                //return done(null, false, console.log("Incorrect Email"));
                return done(null, false, req.flash("err", "Incorrect Email"));
                
              }

              // if (!user.validPassword(Password)) {

              //   return done(null, false, console.log("Incorrect Password"));

              // }

              return done(null, user)
        })
}

))